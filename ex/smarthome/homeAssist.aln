# Recognizers for Activities of Daily Living (ADLs) for HomeAssist

# {Cupboard becomes open and CoffeeMaker becomes on} occurred while BreakfastTime
def breakfast[Ts,Te] =
  let x = slot_dst[Ts, Te] in
  occ(up("ContactS_Cupboard"), x) & occ(up("EMeter_Coffeemaker"), x)

# Lunch reheat
# { ( Freezer becomes open precedes within 10 minutes Stove becomes on )
# or
# ( Freezer becomes open occurred while
# Stove is on ) } occurred while Lunch Time
def lunch[Ts,Te,T] =
  occ(recent[T](up("ContactS_Fridge")) & "EMeter_Coffeemaker",
      slot_dst[Ts, Te])

# {Fridge becomes open and Microwave becomes on} occurred while Dinner Time
def dinner[Ts,Te] =
  let x = slot_dst[Ts, Te] in
  occ(up("ContactS_Fridge"), x) & occ(up("EMeter_Coffeemaker"), x)

# ( Presence(Bathroom) becomes false precedes within 10 minutes Presence(Bedroom) becomes true )
# occurred while Go-to-bed Time
def gotobed[T](m1, m2) =
  occ(recent[T](dn(m1)) & up(m2), slot_dst[21hr, 24hr])

# ( Presence(Bedroom) becomes false precedes within 10 minutes Presence(Kitchen) becomes true )
# occurred while Wake-up Time
def wakeup[T](m1, m2) =
  occ(recent[T](dn(m1)) & up(m2), slot_dst[7hr, 9hr])

#bath.pl:
def any_emeter_up =
  any_up("EMeter_Coffeemaker", "EMeter_L")
def any_contact_sw =
  any_sw("ContactS_Cupboard", "ContactS_E", "ContactS_Fridge")
def any_motion_but_shower_up =
  any_up("MotionD_B", "MotionD_Ba", "MotionD_E", "MotionD_K", "MotionD_L", "MotionD_T")
def any_but_shower2 =
  any_motion_but_shower_up() | any_contact_sw() | any_emeter_up()
def bath[T] =
  flat_right("MotionD_S", ~any_but_shower2()) > T

# departurealert.pl:
def departurealert[T,Hs,He] =
  during("ContactS_E" > T, slot_dst[Hs, He])

# dooralert.pl (NB: resets alarm until new open & new leave):
def dooralert[T] =
  ("ContactS_E" & ~"MotionD_E") > T

# indoor-post:
def any_motion_up =
  any_up("MotionD_B", "MotionD_Ba", "MotionD_E", "MotionD_K", "MotionD_L", "MotionD_S", "MotionD_T")
def indoor_post =
  holds(~(any_motion_up() | any_emeter_up() | any_contact_sw()),
        between(dn("ContactS_E"), up("ContactS_E")) > 10min)

ctx1: step[1] # dummy rule
